//https://api.darksky.net/forecast/d874141aa8c46f2e028f983c8f6949a4/[latitude],[longitude]
//api key: d874141aa8c46f2e028f983c8f6949a4
// const yargs = require('yargs');
//
// const geocode = require('./geocode/geocode');
//
// const argv = yargs
//   .options({
//     a: {
//       demand: true,
//       alias: 'address',
//       describe: 'Address to fetch weather for',
//       string: true
//     }
//   })
//   .help()
//   .alias('help', 'h')
//   .argv;
//
// geocode.geocodeAddress(argv.address, (errorMessage, results) => {
//   if (errorMessage) {
//     console.log(errorMessage);
//   } else {
//     console.log(JSON.stringify(results, undefined, 2));
//   }
// });
//   .help()
//   .alias(`help`, `h`)
//   .argv; //stores it in argv variable
// var encodedAddress = encodeURIComponent(argv.address);
// request({
//   url: `https://maps.googleapis.com/maps/api/geocode/json?address=${encodedAddress}`,
//   json: true
// }, (error, response, body) => {
// //  console.log(JSON.stringify(response, undefined, 2)); //var, undefined because doesnt matter, number of spaces
// console.log(`Address: ${body.results[0].formatted_address}`);
// console.log(`Longitude: ${body.results[0].geometry.location.lng}`);
// console.log(`Lattitude: ${body.results[0].geometry.location.lat}`);
// });
// 4a04d1c42fd9d32c97a2c291a32d5e2d
